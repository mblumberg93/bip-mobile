{"version":3,"sources":["actions/index.js","components/GameForm.js","views/WelcomeScreen.js","constants.js","components/CodeDisplay.js","views/CreatorScreen.js","components/ChooseStart.js","views/StartScreen.js","components/Cup.js","components/Square.js","components/YourRack.js","views/YourTurnScreen.js","components/OpponentRack.js","views/OpponentsTurnScreen.js","formations.js","components/SelectRack.js","views/RerackScreen.js","reducers/index.js","App.js","secrets.js","web-build/register-service-worker.js","assets/circle_PNG63.png","assets/circle_PNG28.png","assets/circle_PNG47.png"],"names":["updateGame","payload","type","makeMove","rerack","ConnectedGameForm","props","state","name","code","nameError","codeError","e","this","setState","generateCode","gameChannel","UUID","onCreate","onJoin","result","characters","charactersLength","length","i","charAt","Math","floor","random","View","style","styles","formContainer","Text","header","label","onChangeText","handleNameChange","containerStyle","marginBottom","errorMessage","renderErrorMessage","fontSize","fontWeight","marginTop","title","buttonStyle","onPress","handleCreate","handleCodeChange","handleJoin","Component","GameForm","connect","dispatch","updates","StyleSheet","create","paddingTop","paddingLeft","paddingRight","WelcomeScreen","navigation","SafeAreaView","navigate","isJoiner","GameEvents","ConnectedCodeDisplay","pubnub","setUUID","listener","message","envelope","content","event","id","toString","substr","publish","channel","opponentName","goToStart","addListener","subscribe","channels","unsubscribeAll","codeText","TouchableOpacity","Clipboard","setString","color","CodeDisplay","textAlign","CreatorScreen","usePubNub","ConnectedChooseStart","displayStartOptions","player","onYouStart","onOpponentStart","screenContainer","standardText","handleYouStart","handleOpponentStart","ChooseStart","StartScreen","route","params","ConnectedCup","row","column","onUpdateCups","source","active","require","cupContainer","toggleCup","disabled","Image","cup","Cup","move","width","height","marginLeft","overflow","vw","Square","square","hasCup","key","ConnectedYourRack","cups","onRerack","onEndTurn","size","Array","keys","squares","map","getCup","handleUpdateCups","Fragment","rackContainer","grid","buttonContainer","handleRerack","handleEndTurn","YourRack","paddingBottom","justifyContent","alignItems","display","flexDirection","flexWrap","YourTurnScreen","ConnectedOpponentRack","onStartTurn","formation","opponentCups","invRow","invColumn","OpponentRack","rack","OpponentsTurnScreen","STANDARD","value","FORMATIONS","ConnectedSelectRack","onChooseRack","onCancel","cupsAvailable","filter","options","pickerContainer","items","onValueChange","placeholder","pickerSelectStyles","handleChooseRack","handleCancel","SelectRack","inputIOS","paddingVertical","paddingHorizontal","borderWidth","borderColor","borderRadius","inputAndroid","RerackScreen","initialState","updateCups","copy","arr","newArr","item","push","rootReducer","action","updatedCups","store","createStore","composeWithDevTools","applyMiddleware","thunk","Stack","createStackNavigator","PubNub","subscribeKey","publishKey","App","NavigationContainer","client","Navigator","initialRouteName","Screen","component","headerLeft","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.d64df7f4.chunk.js","sourcesContent":["export function updateGame(payload) {\n  return { type: 'UPDATE_GAME', payload };\n}\n\nexport function makeMove(payload) {\n  return { type: 'MAKE_MOVE', payload };\n}\n\nexport function rerack(payload) {\n  return { type: 'RERACK', payload };\n}","import React, { Component } from 'react';\nimport { Input, Button, Divider } from 'react-native-elements'\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nclass ConnectedGameForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            name: '',\n            code: '',\n            nameError: false,\n            codeError: false\n         }\n    }\n\n    handleNameChange(e) {\n        this.setState({ name: e, nameError: false });\n    }\n\n    handleCodeChange(e) {\n        this.setState({ code: e, codeError: false });\n    }\n\n    handleCreate() {\n        if (this.state.name) {\n            const code = this.generateCode();\n            const gameChannel = \"game-\" + code;\n            const UUID = this.state.name + \"-\" + gameChannel;\n            this.props.updateGame({ name: this.state.name, code: code, gameChannel: gameChannel, UUID: UUID });\n            this.props.onCreate(this.state.name);\n        } else {\n            this.setState({ nameError: true });\n        }\n    }\n\n    handleJoin() {\n        if (this.state.name && this.state.code) {\n            const gameChannel = \"game-\" + this.state.code;\n            const UUID = this.state.name + \"-\" + gameChannel;\n            this.props.updateGame({ name: this.state.name, code: this.state.code, gameChannel: gameChannel, UUID: UUID });\n            this.props.onJoin(this.state.name, gameChannel);\n        } else if (this.state.name && !this.state.code) {\n            this.setState({ codeError: true });\n        } else if (!this.state.name && this.state.code) {\n            this.setState({ nameError: true });\n        } else {\n            this.setState({ nameError: true, codeError: true })\n        }\n    }\n\n    generateCode() {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < 6; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    render() {\n        return (\n            <View style={styles.formContainer}>\n                <Text style={styles.header}>Step 1: Enter Team Name</Text>\n                <Input label=\"Team Name\" \n                       onChangeText={(e) => this.handleNameChange(e)}\n                       containerStyle={{ marginBottom: 20 }}\n                       errorMessage={this.state.nameError ? \"Team Name is required\" : null }\n                       renderErrorMessage={this.state.nameError}>\n                </Input>\n                <Text style={{ fontSize: 20, fontWeight: \"bold\", marginBottom: 30, marginTop: 10}}>\n                    Step 2: Create A Game or Join A Game\n                </Text>\n                <Button title=\"Create\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleCreate()}>\n                </Button>\n                <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n                <Input label=\"Game Code\" \n                       onChangeText={(e) => this.handleCodeChange(e)}\n                       containerStyle={{ marginBottom: 20 }}\n                       errorMessage={this.state.codeError ? \"Game Code is required to join game\" : null }\n                       renderErrorMessage={this.state.codeError}>\n                </Input>\n                <Button title=\"Join\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleJoin()}>\n                </Button>\n            </View>\n        )\n    }\n};\n\nconst GameForm = connect(null,mapDispatchToProps)(ConnectedGameForm);\n\nexport default GameForm;\n\nconst styles = StyleSheet.create({\n    header: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        marginBottom: 30,\n        marginTop: 10\n    },\n    formContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport GameForm from '../components/GameForm';\n\nexport const WelcomeScreen = ({ navigation }) => {\n    const handleCreate = (name) => {\n        navigation.navigate(\"Creator\", {});\n    }\n\n    const handleJoin = (name, gameChannel) => {\n        navigation.navigate(\"Start\", { isJoiner: true });\n    }\n\n    return (\n        <SafeAreaView>    \n            <GameForm onCreate={handleCreate}\n                      onJoin={handleJoin}>\n            </GameForm>\n        </SafeAreaView>\n    );\n};","export const GameEvents = {\n    JoinerEnteringGame: 0,\n    CreatorEnteringGame: 1,\n    GameStart: 2,\n    MakeMove: 3,\n    EndTurn: 4,\n    Rerack: 5\n}","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Clipboard } from \"react-native\";\nimport { GameEvents } from '../constants';\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedCodeDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n      \n            const listener = {\n              message: envelope => {\n                if (envelope.message.content.event == GameEvents.JoinerEnteringGame) {\n                  const message = {\n                    content: {\n                        event: GameEvents.CreatorEnteringGame,\n                        name: this.props.name\n                    },\n                    id: Math.random().toString(16).substr(2)\n                  };\n                  \n                  this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n                  this.props.updateGame({opponentName: envelope.message.content.name});\n                  this.props.goToStart();\n                }\n              }\n            };\n      \n            this.props.pubnub.addListener(listener);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    render() {\n        return (\n            <View>\n                <Text style={styles.codeText}>Welcome {this.props.name}</Text>\n                <Text style={styles.codeText}>Share This Code With Your Opponent</Text>\n                <Text style={styles.codeText}>{this.props.code}</Text>\n                <TouchableOpacity onPress={() => Clipboard.setString(this.props.code)}>\n                    <Text style={[styles.codeText, { color: \"blue\" }]}> \n                        Copy Code To Clipboard\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}\n\nconst CodeDisplay = connect(mapStateToProps, mapDispatchToProps)(ConnectedCodeDisplay);\n\nexport default CodeDisplay;\n\nconst styles = StyleSheet.create({\n    codeText: {\n        textAlign: \"center\",\n        marginTop: 15,\n        marginBottom: 15,\n        fontSize: 20,\n        fontWeight: \"bold\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport CodeDisplay from \"../components/CodeDisplay\";\n\nexport const CreatorScreen = ({ navigation }) => {\n  const pubnub = usePubNub();\n\n  const goToStart = () => {\n    navigation.navigate(\"Start\", {});\n  }\n\n  return (\n      <SafeAreaView> \n        <CodeDisplay pubnub={pubnub}\n                     goToStart={goToStart}></CodeDisplay>\n      </SafeAreaView>\n  );\n};","import React, { Component } from 'react';\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { Button } from 'react-native-elements';\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\nimport { GameEvents } from '../constants';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedChooseStart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayStartOptions: (this.props.isJoiner ? false : true)\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n    \n            const listener = {\n                message: envelope => {\n                    if (envelope.message.content.event == GameEvents.CreatorEnteringGame && this.props.isJoiner) {\n                        this.props.updateGame({opponentName: envelope.message.content.name});\n                        this.setState({ displayStartOptions: true });\n                    }\n                    if (envelope.message.content.event == GameEvents.GameStart) {\n                        if (envelope.message.content.player == this.props.name) {\n                            this.props.onYouStart();\n                        } else {\n\n                            this.props.onOpponentStart();\n                        }             \n                    }\n                }\n            };\n      \n            this.props.pubnub.addListener(listener);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n\n            if (this.props.isJoiner) {\n                const message = {\n                    content: {\n                        event: GameEvents.JoinerEnteringGame,\n                        name: this.props.name\n                    },\n                    id: Math.random().toString(16).substr(2)\n                };\n                this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    handleYouStart() {\n        this.props.onYouStart();\n        const message = {\n            content: {\n                event: GameEvents.GameStart,\n                player: this.props.name\n            },\n            id: Math.random().toString(16).substr(2)\n        };\n        this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n    }\n\n    handleOpponentStart() {\n        this.props.onOpponentStart();\n        const message = {\n            content: {\n                event: GameEvents.GameStart,\n                player: this.props.opponentName\n            },\n            id: Math.random().toString(16).substr(2)\n        };\n        this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n    }\n\n    render() {\n        return (\n            <View style={styles.screenContainer}>\n                <Text style={styles.standardText}>Welcome {this.props.name}!</Text>\n                { !this.state.displayStartOptions &&\n                    <Text style={styles.standardText}>Waiting For Your Opponent To Join The Game...</Text>\n                } \n                { this.state.displayStartOptions && \n                    <View>\n                        <Text style={styles.standardText}>Your opponent is {this.props.opponentName}</Text>\n                        <Text style={styles.standardText}>Choose who starts</Text>\n                        <Button title={this.props.name + \" Starts\"} \n                                buttonStyle={{ marginBottom: 15 }}\n                                onPress={() => this.handleYouStart()}>\n                        </Button>\n                        <Button title={this.props.opponentName + \" Starts\"} \n                                buttonStyle={{ marginBottom: 15 }}\n                                onPress={() => this.handleOpponentStart()}>\n                        </Button>\n                    </View>\n                }\n            </View>\n        );\n    }\n}\n\nconst ChooseStart = connect(mapStateToProps, mapDispatchToProps)(ConnectedChooseStart);\n\nexport default ChooseStart;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    standardText: {\n        textAlign: \"center\",\n        marginTop: 15,\n        marginBottom: 15,\n        fontSize: 20,\n        fontWeight: \"bold\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChooseStart from \"../components/ChooseStart\";\nimport { usePubNub } from \"pubnub-react\";\n\nexport const StartScreen = ({ route, navigation }) => {\n    const pubnub = usePubNub();\n\n    const handleYouStart = () => {\n        navigation.navigate(\"Your Turn\", { });\n    }\n\n    const handleOpponentStart = () => {\n        navigation.navigate(\"Opponents Turn\", { });\n    }\n    \n    return (\n        <SafeAreaView>\n            <ChooseStart isJoiner={route.params.isJoiner}\n                         pubnub={pubnub}\n                         onYouStart={handleYouStart}\n                         onOpponentStart={handleOpponentStart}></ChooseStart>\n        </SafeAreaView>\n    );\n};","import React, { Component } from 'react';\nimport { StyleSheet, Image, TouchableOpacity } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { makeMove } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        makeMove: move => dispatch(makeMove(move))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedCup extends Component {\n    constructor(props) {\n        super(props)\n    }\n    \n    toggleCup() {\n        if (this.props.player === this.props.name) {\n            this.props.makeMove({ player: this.props.name, row: this.props.row, column: this.props.column });\n            this.props.onUpdateCups(this.props.row, this.props.column);\n        }\n    }\n\n    render() {\n        const source = !this.props.active ? require('../assets/circle_PNG63.png') : this.props.player === this.props.name ? \n            require('../assets/circle_PNG28.png') : require('../assets/circle_PNG47.png')\n        return (\n            <TouchableOpacity style={styles.cupContainer}\n                              onPress={() => this.toggleCup()}\n                              disabled={this.props.player !== this.props.name}>\n                <Image style={styles.cup} source={source}>\n                </Image>\n            </TouchableOpacity>\n        );\n    }\n}\n\nconst Cup = connect(mapStateToProps, mapDispatchToProps)(ConnectedCup);\n\nexport default Cup;\n\nconst styles = StyleSheet.create({\n    cup: {\n        width: \"180%\",\n        height: \"180%\",\n        marginTop: \"-45%\",\n        marginLeft: \"-45%\"\n    },\n    cupContainer: {\n        overflow: \"visible\",\n        width: \"100%\",\n        height: \"100%\"\n    }\n});","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport Cup from '../components/Cup';\nconst { vw } = require('react-native-expo-viewport-units');\n\nclass Square extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <View style={styles.square}>\n                { this.props.hasCup &&\n                    <Cup key={\"cup\" + this.props.row + this.props.column}\n                         player={this.props.player}\n                         row={this.props.row}\n                         column={this.props.column}\n                         active={this.props.active}\n                         onUpdateCups={(row, column) => this.props.onUpdateCups(row, column)}>\n                    </Cup>\n                }\n            </View>\n        );\n    }\n}\n\nexport default Square;\n\nconst styles = StyleSheet.create({\n    square: {\n        width: vw(10),\n        height: vw(10)\n    }\n});","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { Button } from 'react-native-elements'\nimport { connect } from \"react-redux\";\nimport Square from '../components/Square';\nimport { GameEvents } from '../constants';\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedYourRack extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    getCup(row, column) {\n        for (const cup of this.props.cups) {\n            if (cup.row === row && cup.column === column) {\n                return cup;\n            }\n        }\n        return null;\n    }\n\n    handleUpdateCups(row, column) {\n        const message = {\n            content: {\n                event: GameEvents.MakeMove,\n                player: this.props.name,\n                row: row,\n                column: column\n            },\n            id: Math.random().toString(16).substr(2)\n          };\n        \n          this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n    }\n\n    handleRerack() {\n        this.props.onRerack();\n    }\n\n    handleEndTurn() {\n        const message = {\n            content: {\n                event: GameEvents.EndTurn,\n                player: this.props.name\n            },\n            id: Math.random().toString(16).substr(2)\n        };\n        \n        this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n        this.props.onEndTurn();\n    }\n\n    render() {\n        const size = [...Array(7).keys()];\n        const squares = size.map(row => {\n            return size.map(column => {\n                const cup = this.getCup(row, column);\n                return <Square key={\"square\"+row+column} \n                               player={this.props.name}\n                               row={row} \n                               column={column}\n                               hasCup={cup !== null}\n                               active={cup ? cup.active : false}\n                               onUpdateCups={(row, column) => this.handleUpdateCups(row, column)}></Square>;\n            });\n        });\n\n        return (\n            <React.Fragment>\n                <View style={styles.rackContainer}>\n                    <View style={styles.grid}>\n                        {squares}\n                    </View>\n                </View>\n                <View style={styles.buttonContainer}>\n                    <Button title=\"Rerack\" \n                            buttonStyle={{ marginBottom: 15 }}\n                            onPress={() => this.handleRerack()}>\n                    </Button>\n                    <Button title=\"End Turn\" \n                            buttonStyle={{ marginBottom: 15 }}\n                            onPress={() => this.handleEndTurn()}>\n                    </Button>\n                </View>\n            </React.Fragment>\n        );\n    }\n}\n\nconst YourRack = connect(mapStateToProps)(ConnectedYourRack);\n\nexport default YourRack;\n\nconst styles = StyleSheet.create({\n    rackContainer: {\n        paddingTop: vw(10),\n        paddingBottom: vw(10),\n        paddingLeft: 15,\n        paddingRight: 15,\n        justifyContent: \"center\",\n        alignItems: 'center'\n    },\n    buttonContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingBottom: 20\n    },\n    grid: {\n        width: vw(70),\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport YourRack from '../components/YourRack';\n\nexport const YourTurnScreen = ({ navigation }) => {\n    const pubnub = usePubNub();\n\n    const handleRerack = () => {\n        navigation.navigate(\"Rerack\", {});\n    }\n\n    const handleEndTurn = () => {\n        navigation.navigate(\"Opponents Turn\", {});\n    }\n    \n    return (\n        <SafeAreaView>\n            <YourRack pubnub={pubnub}\n                      onRerack={handleRerack}\n                      onEndTurn={handleEndTurn}>\n            </YourRack>\n        </SafeAreaView>\n    );\n};","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { makeMove } from \"../actions/index\";\nimport { rerack } from \"../actions/index\";\nimport Square from '../components/Square';\nimport { GameEvents } from '../constants';\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        makeMove: move => dispatch(makeMove(move)),\n        rerack: rack => dispatch(rerack(rack))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedOpponentRack extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n            const listener = {\n                message: envelope => {\n                    if (envelope.message.content.player === this.props.name) {\n                        return;\n                    }\n                    if (envelope.message.content.event === GameEvents.MakeMove) {\n                        const move = { \n                            player: envelope.message.content.player, \n                            row: envelope.message.content.row, \n                            column: envelope.message.content.column\n                        }\n                        this.props.makeMove(move);\n                    }\n                    if (envelope.message.content.event === GameEvents.EndTurn) {\n                        this.props.onStartTurn();\n                    }\n                    if (envelope.message.content.event === GameEvents.Rerack) {\n                        this.props.rerack({ player: envelope.message.content.player, formation: envelope.message.content.formation });\n                    }\n                }\n              };\n        \n              this.props.pubnub.addListener(listener);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    getCup(row, column) {\n        for (const cup of this.props.opponentCups) {\n            if (cup.row === row && cup.column === column) {\n                return cup;\n            }\n        }\n        return null;\n    }\n\n    render() {\n        const size = [...Array(7).keys()];\n        const squares = size.map(invRow => {\n            return size.map(invColumn => {\n                const row = 6 - invRow;\n                const column = 6 - invColumn;\n                const cup = this.getCup(row, column);\n                return <Square key={\"square\"+row+column} \n                               player={this.props.opponentName}\n                               row={row} \n                               column={column}\n                               hasCup={cup !== null}\n                               active={cup ? cup.active : false}\n                               onUpdateCups={(row, column) => this.handleUpdateCups(row, column)}></Square>;\n            });\n        });\n\n        return (\n            <View style={styles.screenContainer}>\n                <View style={styles.grid}>\n                    {squares}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst OpponentRack = connect(mapStateToProps, mapDispatchToProps)(ConnectedOpponentRack);\n\nexport default OpponentRack;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: vw(10),\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingBottom: vw(10),\n        justifyContent: \"center\",\n        alignItems: 'center'\n    },\n    grid: {\n        width: vw(70),\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView, Text } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport OpponentRack  from \"../components/OpponentRack\";\n\nexport const OpponentsTurnScreen = ({ navigation }) => {\n    const pubnub = usePubNub();\n\n    const handleStartTurn = () => {\n        navigation.navigate(\"Your Turn\", {});\n    }\n    \n    return (\n        <SafeAreaView>\n            <OpponentRack pubnub={pubnub}\n                          onStartTurn={handleStartTurn}>\n            </OpponentRack>\n        </SafeAreaView>\n    );\n};","export const STANDARD = {\n    value: 0,\n    name: \"Standard\",\n    size: 10,\n    cups: [\n        { row: 0, column: 0, active: true },\n        { row: 0, column: 2, active: true},\n        { row: 0, column: 4, active: true },\n        { row: 0, column: 6, active: true },\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 3, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true },\n        { row: 6, column: 3, active: true }\n    ]\n}\n\nexport const DESPERATION = {\n    value: 1,\n    name: \"Desperation Honeycomb\",\n    size: 7,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 0, column: 4, active: true},\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 3, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true }\n    ]\n}\n\nexport const THREETWOONE = {\n    value: 2,\n    name: \"Three Two One\",\n    size: 6,\n    cups: [\n        { row: 0, column: 1, active: true },\n        { row: 0, column: 3, active: true},\n        { row: 0, column: 5, active: true },\n        { row: 2, column: 2, active: true },\n        { row: 2, column: 4, active: true },\n        { row: 4, column: 3, active: true }\n    ]\n}\n\nexport const THREETHREESTRAIGHT = {\n    value: 3,\n    name: \"Three Three Straight Line\",\n    size: 6,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true },\n        { row: 3, column: 4, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 5, column: 4, active: true }\n    ]\n}\n\nexport const LARGEPLAYBUTTON = {\n    value: 4,\n    name: \"Large Play Button\",\n    size: 6,\n    cups: [\n        { row: 0, column: 1, active: true },\n        { row: 1, column: 3, active: true},\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 3, column: 3, active: true },\n        { row: 4, column: 1, active: true }\n    ]\n}\n\nexport const THREETWOSTRAIGHT = {\n    value: 5,\n    name: \"Three Two Straight Line\",\n    size: 5,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true },\n        { row: 3, column: 4, active: true },\n        { row: 4, column: 2, active: true }\n    ]\n}\n\nexport const DOGBONE = {\n    value: 6,\n    name: \"Dog Bone\",\n    size: 5,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 0, column: 4, active: true},\n        { row: 2, column: 3, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true }\n    ]\n}\n\nexport const DIAMOND = {\n    value: 7,\n    name: \"Diamond\",\n    size: 4,\n    cups: [\n        { row: 0, column: 3, active: true },\n        { row: 2, column: 2, active: true},\n        { row: 2, column: 4, active: true },\n        { row: 4, column: 3, active: true }\n    ]\n}\n\nexport const TWOTWOSTRAIGHT = {\n    value: 8,\n    name: \"Two Two Straight Line\",\n    size: 4,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true },\n        { row: 3, column: 4, active: true }\n    ]\n}\n\nexport const TINYTRIANGLE = {\n    value: 9,\n    name: \"Tiny Triange\",\n    size: 3,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 0, column: 4, active: true},\n        { row: 2, column: 3, active: true }\n    ]\n}\n\nexport const BELLYBUTTON = {\n    value: 10,\n    name: \"Belly Button (Small Play Button)\",\n    size: 3,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true }\n    ]\n}\n\nexport const STOPLIGHT = {\n    value: 11,\n    name: \"Stoplight\",\n    size: 3,\n    cups: [\n        { row: 0, column: 3, active: true },\n        { row: 2, column: 3, active: true},\n        { row: 4, column: 3, active: true }\n    ]\n}\n\nexport const GENTLEMENS = {\n    value: 12,\n    name: \"Gentlemens\",\n    size: 2,\n    cups: [\n        { row: 0, column: 3, active: true },\n        { row: 2, column: 3, active: true}\n    ]\n}\n\nexport const SINGLECUP = {\n    value: 13,\n    name: \"Single Cup\",\n    size: 1,\n    cups: [\n        { row: 0, column: 3, active: true }\n    ]\n}\n\nexport const FORMATIONS = [\n    STANDARD,\n    DESPERATION,\n    THREETWOONE,\n    THREETHREESTRAIGHT,\n    LARGEPLAYBUTTON,\n    THREETWOSTRAIGHT,\n    DOGBONE,\n    DIAMOND,\n    TWOTWOSTRAIGHT,\n    TINYTRIANGLE,\n    BELLYBUTTON,\n    STOPLIGHT,\n    GENTLEMENS,\n    SINGLECUP\n];","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { Button } from 'react-native-elements'\nimport { connect } from \"react-redux\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport { GameEvents } from '../constants';\nimport { FORMATIONS }from '../formations';\nimport { rerack } from \"../actions/index\";\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        rerack: rack => dispatch(rerack(rack))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedSelectRack extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formation: null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    handleChooseRack() {\n        const message = {\n            content: {\n                event: GameEvents.Rerack,\n                player: this.props.name,\n                formation: this.state.formation\n            },\n            id: Math.random().toString(16).substr(2)\n        };\n        \n        this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n        this.props.rerack({ player: this.props.name, formation: this.state.formation });\n        this.props.onChooseRack();\n    }\n\n    handleCancel() {\n        this.props.onCancel();\n    }\n\n    render() {\n        const cupsAvailable = this.props.cups.filter(cup => cup.active).length;\n        const possibleFormations = FORMATIONS.filter(formation => formation.size == cupsAvailable);\n\n        const options = possibleFormations.map(formation => {\n            return { label: formation.name, value: formation.value };\n        });\n\n        const placeholder = {\n            label: \"Select a Rack...\",\n            value: null,\n            color: 'grey'\n          };\n\n        return (\n            <View style={styles.buttonContainer}>\n                <View style={styles.pickerContainer}>\n                    <RNPickerSelect items={options}\n                                    onValueChange={(value) => this.setState({ formation: value })} \n                                    placeholder={placeholder}\n                                    style={pickerSelectStyles} />\n                </View>\n                <Button title=\"Rerack\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleChooseRack()}>\n                </Button>\n                <Button title=\"Cancel\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleCancel()}>\n                </Button>\n            </View>\n        );\n    }\n}\n\nconst SelectRack = connect(mapStateToProps, mapDispatchToProps)(ConnectedSelectRack);\n\nexport default SelectRack;\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    pickerContainer: {\n        marginBottom: 20\n    }\n});\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n      fontSize: 16,\n      paddingVertical: 12,\n      paddingHorizontal: 10,\n      borderWidth: 1,\n      borderColor: 'gray',\n      borderRadius: 4,\n      color: 'black',\n      paddingRight: 30,\n      fontWeight: 'bold'\n    },\n    inputAndroid: {\n      fontSize: 16,\n      paddingHorizontal: 10,\n      paddingVertical: 8,\n      borderWidth: 0.5,\n      borderColor: 'purple',\n      borderRadius: 8,\n      color: 'black',\n      paddingRight: 30,\n      fontWeight: 'bold'\n    },\n  });","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport SelectRack from '../components/SelectRack';\n\nexport const RerackScreen = ({ navigation }) => {\n    const pubnub = usePubNub();\n\n    const handleChooseRack = () => {\n        navigation.navigate(\"Your Turn\", {});\n    }\n\n    const handleCancel = () => {\n        navigation.navigate(\"Your Turn\", {});\n    }\n    \n    return (\n        <SafeAreaView>\n            <SelectRack pubnub={pubnub}\n                      onChooseRack={handleChooseRack}\n                      onCancel={handleCancel}>\n            </SelectRack>\n        </SafeAreaView>\n    );\n};","import { STANDARD, FORMATIONS } from '../formations';\n\nexport const initialState = {\n  name: '',\n  opponentName: '',\n  gameChannel: '',\n  UUID: '',\n  code: '',\n  cups: STANDARD.cups,\n  opponentCups: STANDARD.cups,\n  formation: STANDARD.value\n}\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === 'UPDATE_GAME') {\n    return Object.assign({}, state, action.payload);\n  }\n  if (action.type === 'MAKE_MOVE') {\n    const cups = action.payload.player === state.name ? copy(state.cups) : copy(state.opponentCups);\n    const updatedCups = updateCups(cups, action.payload.row, action.payload.column);\n    if (action.payload.player === state.name) {\n      return Object.assign({}, state, { cups: updatedCups} );\n    } else {\n      return Object.assign({}, state, { opponentCups: updatedCups });\n    }\n  }\n  if (action.type === 'RERACK') {\n    const cups = FORMATIONS.filter(formation => formation.value == action.payload.formation)[0].cups;\n    if (action.payload.player === state.name) {\n      return Object.assign({}, state, { cups: cups} );\n    } else {\n      return Object.assign({}, state, { opponentCups: cups });\n    }\n  }\n  return state;\n}\n\nfunction updateCups(cups, row, column) {\n  const newCups = cups.map(cup => {\n    if (cup.row === row && cup.column === column) {\n        cup.active = !cup.active;\n    }\n    return cup;\n  })\n  return newCups;\n}\n\nfunction copy(arr) {\n  const newArr = [];\n  for (const item of arr) {\n    newArr.push(Object.assign({}, item));\n  }\n  return newArr;\n}\n\nexport default rootReducer;","import React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PubNub from \"pubnub\";\nimport { PubNubProvider } from \"pubnub-react\";\nimport { PUBNUB_PUBLISH_KEY, PUBNUB_SUBSCRIBE_KEY } from './secrets';\nimport { WelcomeScreen } from './views/WelcomeScreen';\nimport { CreatorScreen } from './views/CreatorScreen';\nimport { StartScreen } from './views/StartScreen';\nimport { YourTurnScreen } from './views/YourTurnScreen';\nimport { OpponentsTurnScreen } from './views/OpponentsTurnScreen';\nimport { RerackScreen } from './views/RerackScreen';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst Stack = createStackNavigator();\nconst pubnub = new PubNub({\n  subscribeKey: PUBNUB_SUBSCRIBE_KEY,\n  publishKey: PUBNUB_PUBLISH_KEY\n});\n\nclass App extends Component {\n  constructor(props) {  \n    super(props);\n  }\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <PubNubProvider client={pubnub}>\n            <Stack.Navigator initialRouteName=\"Welcome\">\n              <Stack.Screen name=\"Welcome\" \n                            component={WelcomeScreen} \n                            options={{ title: 'Welcome To BIP' }} />\n              <Stack.Screen name=\"Creator\" \n                            component={CreatorScreen} \n                            options={{ title: 'Game Code' }} />\n              <Stack.Screen name=\"Start\"\n                            component={StartScreen} \n                            options={{ title: 'Choose Start' }} />\n              <Stack.Screen name=\"Your Turn\"\n                            component={YourTurnScreen} \n                            options={{ title: 'Your Turn', headerLeft: null }} />\n              <Stack.Screen name=\"Opponents Turn\"\n                            component={OpponentsTurnScreen} \n                            options={{ title: \"Opponent's Turn\", headerLeft: null }} />\n              <Stack.Screen name=\"Rerack\"\n                            component={RerackScreen} \n                            options={{ title: \"Choose Rack\", headerLeft: null }} />\n            </Stack.Navigator>\n          </PubNubProvider>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","export const PUBNUB_PUBLISH_KEY = \"pub-c-cbe88329-b9ae-47ef-8470-0a088c87c8ae\";\nexport const PUBNUB_SUBSCRIBE_KEY = \"sub-c-1caa123c-8678-11ea-885f-2621b2dc68c7\" ;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/bip-mobile/expo-service-worker.js', { scope: '/bip-mobile/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/circle_PNG63.6b47719b.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_PNG28.dc0b480f.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_PNG47.7225507e.png\";"],"sourceRoot":""}