{"version":3,"sources":["actions/index.js","components/GameForm.js","views/WelcomeScreen.js","constants.js","components/CodeDisplay.js","views/CreatorScreen.js","components/ChooseStart.js","views/StartScreen.js","components/Cup.js","components/Square.js","components/YourRack.js","views/YourTurnScreen.js","components/OpponentRack.js","views/OpponentsTurnScreen.js","formations.js","reducers/index.js","App.js","secrets.js","web-build/register-service-worker.js","assets/circle_PNG6.png","assets/circle_PNG3.png","assets/circle_PNG4.png"],"names":["updateGame","payload","type","makeMove","ConnectedGameForm","props","state","name","code","nameError","codeError","e","this","setState","generateCode","gameChannel","UUID","onCreate","onJoin","result","characters","charactersLength","length","i","charAt","Math","floor","random","View","style","styles","formContainer","Text","header","label","onChangeText","handleNameChange","containerStyle","input","errorMessage","renderErrorMessage","title","buttonStyle","button","onPress","handleCreate","divider","handleCodeChange","handleJoin","Component","GameForm","connect","dispatch","updates","StyleSheet","create","fontSize","fontWeight","marginBottom","marginTop","paddingTop","paddingLeft","paddingRight","WelcomeScreen","navigation","SafeAreaView","navigate","isJoiner","GameEvents","ConnectedCodeDisplay","pubnub","setUUID","listener","message","envelope","content","event","id","toString","substr","publish","channel","opponentName","goToStart","addListener","subscribe","channels","unsubscribeAll","codeText","TouchableOpacity","Clipboard","setString","color","CodeDisplay","textAlign","CreatorScreen","usePubNub","ConnectedChooseStart","displayStartOptions","player","onYouStart","onOpponentStart","screenContainer","standardText","handleYouStart","handleOpponentStart","ChooseStart","StartScreen","route","params","ConnectedCup","row","column","onUpdateCups","source","active","require","cupContainer","toggleCup","disabled","Image","cup","Cup","move","width","height","marginLeft","overflow","vw","Square","square","hasCup","key","ConnectedYourRack","cups","size","Array","keys","squares","map","getCup","handleUpdateCups","grid","YourRack","paddingBottom","justifyContent","alignItems","display","flexDirection","flexWrap","YourTurnScreen","ConnectedOpponentRack","opponentCups","invRow","invColumn","OpponentRack","OpponentsTurnScreen","STANDARD","value","initialState","updateCups","rootReducer","action","updatedCups","store","createStore","composeWithDevTools","applyMiddleware","thunk","Stack","createStackNavigator","PubNub","subscribeKey","publishKey","App","NavigationContainer","client","Navigator","initialRouteName","Screen","component","options","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.bc8770f5.chunk.js","sourcesContent":["export function updateGame(payload) {\n  return { type: 'UPDATE_GAME', payload };\n}\n\nexport function makeMove(payload) {\n  return { type: 'MAKE_MOVE', payload };\n}","import React, { Component } from 'react';\nimport { Input, Button, Divider } from 'react-native-elements'\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nclass ConnectedGameForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            name: '',\n            code: '',\n            nameError: false,\n            codeError: false\n         }\n    }\n\n    handleNameChange(e) {\n        this.setState({ name: e, nameError: false });\n    }\n\n    handleCodeChange(e) {\n        this.setState({ code: e, codeError: false });\n    }\n\n    handleCreate() {\n        if (this.state.name) {\n            const code = this.generateCode();\n            const gameChannel = \"game-\" + code;\n            const UUID = this.state.name + \"-\" + gameChannel;\n            this.props.updateGame({ name: this.state.name, code: code, gameChannel: gameChannel, UUID: UUID });\n            this.props.onCreate(this.state.name);\n        } else {\n            this.setState({ nameError: true });\n        }\n    }\n\n    handleJoin() {\n        if (this.state.name && this.state.code) {\n            const gameChannel = \"game-\" + this.state.code;\n            const UUID = this.state.name + \"-\" + gameChannel;\n            this.props.updateGame({ name: this.state.name, code: this.state.code, gameChannel: gameChannel, UUID: UUID });\n            this.props.onJoin(this.state.name, gameChannel);\n        } else if (this.state.name && !this.state.code) {\n            this.setState({ codeError: true });\n        } else if (!this.state.name && this.state.code) {\n            this.setState({ nameError: true });\n        } else {\n            this.setState({ nameError: true, codeError: true })\n        }\n    }\n\n    generateCode() {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < 6; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    render() {\n        return (\n            <View style={styles.formContainer}>\n                <Text style={styles.header}>Step 1: Enter Team Name</Text>\n                <Input label=\"Team Name\" \n                       onChangeText={(e) => this.handleNameChange(e)}\n                       containerStyle={styles.input}\n                       errorMessage={this.state.nameError ? \"Team Name is required\" : null }\n                       renderErrorMessage={this.state.nameError}>\n                </Input>\n                <Text style={styles.header}>Step 2: Create A Game or Join A Game</Text>\n                <Button title=\"Create\" \n                        buttonStyle={styles.button}\n                        onPress={() => this.handleCreate()}>\n                </Button>\n                <Divider style={styles.divider} />\n                <Input label=\"Game Code\" \n                       onChangeText={(e) => this.handleCodeChange(e)}\n                       containerStyle={styles.input}\n                       errorMessage={this.state.codeError ? \"Game Code is required to join game\" : null }\n                       renderErrorMessage={this.state.codeError}>\n                </Input>\n                <Button title=\"Join\" \n                        buttonStyle={styles.button}\n                        onPress={() => this.handleJoin()}>\n                </Button>\n            </View>\n        )\n    }\n};\n\nconst GameForm = connect(null,mapDispatchToProps)(ConnectedGameForm);\n\nexport default GameForm;\n\nconst styles = StyleSheet.create({\n    header: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        marginBottom: 30,\n        marginTop: 10\n    },\n    formContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    input: {\n        marginBottom: 20\n    },\n    button: {\n        marginBottom: 15,\n    },\n    divider: {\n        marginTop: 30,\n        marginBottom: 30\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport GameForm from '../components/GameForm';\n\nexport const WelcomeScreen = ({ navigation }) => {\n    const handleCreate = (name) => {\n        navigation.navigate(\"Creator\", {});\n    }\n\n    const handleJoin = (name, gameChannel) => {\n        navigation.navigate(\"Start\", { isJoiner: true });\n    }\n\n    return (\n        <SafeAreaView>    \n            <GameForm onCreate={handleCreate}\n                      onJoin={handleJoin}>\n            </GameForm>\n        </SafeAreaView>\n    );\n};","export const GameEvents = {\n    JoinerEnteringGame: 0,\n    CreatorEnteringGame: 1,\n    GameStart: 2,\n    MakeMove: 3\n}","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Clipboard } from \"react-native\";\nimport { GameEvents } from '../constants';\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedCodeDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n      \n            const listener = {\n              message: envelope => {\n                if (envelope.message.content.event == GameEvents.JoinerEnteringGame) {\n                  const message = {\n                    content: {\n                        event: GameEvents.CreatorEnteringGame,\n                        name: this.props.name\n                    },\n                    id: Math.random().toString(16).substr(2)\n                  };\n                  \n                  this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n                  this.props.updateGame({opponentName: envelope.message.content.name});\n                  this.props.goToStart();\n                }\n              }\n            };\n      \n            this.props.pubnub.addListener(listener);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    render() {\n        return (\n            <View>\n                <Text style={styles.codeText}>Welcome {this.props.name}</Text>\n                <Text style={styles.codeText}>Share This Code With Your Opponent</Text>\n                <Text style={styles.codeText}>{this.props.code}</Text>\n                <TouchableOpacity onPress={() => Clipboard.setString(this.props.code)}>\n                    <Text style={[styles.codeText, { color: \"blue\" }]}> \n                        Copy Code To Clipboard\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}\n\nconst CodeDisplay = connect(mapStateToProps, mapDispatchToProps)(ConnectedCodeDisplay);\n\nexport default CodeDisplay;\n\nconst styles = StyleSheet.create({\n    codeText: {\n        textAlign: \"center\",\n        marginTop: 15,\n        marginBottom: 15,\n        fontSize: 20,\n        fontWeight: \"bold\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport CodeDisplay from \"../components/CodeDisplay\";\n\nexport const CreatorScreen = ({ navigation }) => {\n  const pubnub = usePubNub();\n\n  const goToStart = () => {\n    navigation.navigate(\"Start\", {});\n  }\n\n  return (\n      <SafeAreaView> \n        <CodeDisplay pubnub={pubnub}\n                     goToStart={goToStart}></CodeDisplay>\n      </SafeAreaView>\n  );\n};","import React, { Component } from 'react';\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { Button } from 'react-native-elements'\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\nimport { GameEvents } from '../constants';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedChooseStart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayStartOptions: (this.props.isJoiner ? false : true)\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n    \n            const listener = {\n                message: envelope => {\n                    if (envelope.message.content.event == GameEvents.CreatorEnteringGame && this.props.isJoiner) {\n                        this.props.updateGame({opponentName: envelope.message.content.name});\n                        this.setState({ displayStartOptions: true });\n                    }\n                    if (envelope.message.content.event == GameEvents.GameStart) {\n                        if (envelope.message.content.player == this.props.name) {\n                            this.props.onYouStart();\n                        } else {\n\n                            this.props.onOpponentStart();\n                        }             \n                    }\n                }\n            };\n      \n            this.props.pubnub.addListener(listener);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n\n            if (this.props.isJoiner) {\n                const message = {\n                    content: {\n                        event: GameEvents.JoinerEnteringGame,\n                        name: this.props.name\n                    },\n                    id: Math.random().toString(16).substr(2)\n                };\n                this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    handleYouStart() {\n        this.props.onYouStart();\n        const message = {\n            content: {\n                event: GameEvents.GameStart,\n                player: this.props.name\n            },\n            id: Math.random().toString(16).substr(2)\n        };\n        this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n    }\n\n    handleOpponentStart() {\n        this.props.onOpponentStart();\n        const message = {\n            content: {\n                event: GameEvents.GameStart,\n                player: this.props.opponentName\n            },\n            id: Math.random().toString(16).substr(2)\n        };\n        this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n    }\n\n    render() {\n        return (\n            <View style={styles.screenContainer}>\n                <Text style={styles.standardText}>Welcome {this.props.name}!</Text>\n                { !this.state.displayStartOptions &&\n                    <Text style={styles.standardText}>Waiting For Your Opponent To Join The Game...</Text>\n                } \n                { this.state.displayStartOptions && \n                    <View>\n                        <Text style={styles.standardText}>Your opponent is {this.props.opponentName}</Text>\n                        <Text style={styles.standardText}>Choose who starts</Text>\n                        <Button title={this.props.name + \" Starts\"} \n                                buttonStyle={styles.button}\n                                onPress={() => this.handleYouStart()}>\n                        </Button>\n                        <Button title={this.props.opponentName + \" Starts\"} \n                                buttonStyle={styles.button}\n                                onPress={() => this.handleOpponentStart()}>\n                        </Button>\n                    </View>\n                }\n            </View>\n        );\n    }\n}\n\nconst ChooseStart = connect(mapStateToProps, mapDispatchToProps)(ConnectedChooseStart);\n\nexport default ChooseStart;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    standardText: {\n        textAlign: \"center\",\n        marginTop: 15,\n        marginBottom: 15,\n        fontSize: 20,\n        fontWeight: \"bold\"\n    },\n    button: {\n        marginBottom: 15,\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChooseStart from \"../components/ChooseStart\";\nimport { usePubNub } from \"pubnub-react\";\n\nexport const StartScreen = ({ route, navigation }) => {\n    const pubnub = usePubNub();\n\n    const handleYouStart = () => {\n        navigation.navigate(\"Your Turn\", { });\n    }\n\n    const handleOpponentStart = () => {\n        navigation.navigate(\"Opponents Turn\", { });\n    }\n    \n    return (\n        <SafeAreaView>\n            <ChooseStart isJoiner={route.params.isJoiner}\n                         pubnub={pubnub}\n                         onYouStart={handleYouStart}\n                         onOpponentStart={handleOpponentStart}></ChooseStart>\n        </SafeAreaView>\n    );\n};","import React, { Component } from 'react';\nimport { StyleSheet, Image, TouchableOpacity } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { makeMove } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        makeMove: move => dispatch(makeMove(move))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedCup extends Component {\n    constructor(props) {\n        super(props)\n    }\n    \n    toggleCup() {\n        if (this.props.player === this.props.name) {\n            this.props.makeMove({ player: this.props.name, row: this.props.row, column: this.props.column });\n            this.props.onUpdateCups(this.props.row, this.props.column);\n        }\n    }\n\n    render() {\n        const source = !this.props.active ? require('../assets/circle_PNG6.png') : this.props.player === this.props.name ? \n            require('../assets/circle_PNG3.png') : require('../assets/circle_PNG4.png')\n        return (\n            <TouchableOpacity style={styles.cupContainer}\n                              onPress={() => this.toggleCup()}\n                              disabled={this.props.player !== this.props.name}>\n                <Image style={styles.cup} source={source}>\n                </Image>\n            </TouchableOpacity>\n        );\n    }\n}\n\nconst Cup = connect(mapStateToProps, mapDispatchToProps)(ConnectedCup);\n\nexport default Cup;\n\nconst styles = StyleSheet.create({\n    cup: {\n        width: \"180%\",\n        height: \"180%\",\n        marginTop: \"-45%\",\n        marginLeft: \"-45%\"\n    },\n    cupContainer: {\n        overflow: \"visible\",\n        width: \"100%\",\n        height: \"100%\"\n    }\n});","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport Cup from '../components/Cup';\nconst { vw } = require('react-native-expo-viewport-units');\n\nclass Square extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <View style={styles.square}>\n                { this.props.hasCup &&\n                    <Cup key={\"cup\" + this.props.row + this.props.column}\n                         player={this.props.player}\n                         row={this.props.row}\n                         column={this.props.column}\n                         active={this.props.active}\n                         onUpdateCups={(row, column) => this.props.onUpdateCups(row, column)}>\n                    </Cup>\n                }\n            </View>\n        );\n    }\n}\n\nexport default Square;\n\nconst styles = StyleSheet.create({\n    square: {\n        width: vw(10),\n        height: vw(10)\n    }\n});","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Square from '../components/Square';\nimport { GameEvents } from '../constants';\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedYourRack extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    getCup(row, column) {\n        for (const cup of this.props.cups) {\n            if (cup.row === row && cup.column === column) {\n                return cup;\n            }\n        }\n        return null;\n    }\n\n    handleUpdateCups(row, column) {\n        const message = {\n            content: {\n                event: GameEvents.MakeMove,\n                player: this.props.name,\n                row: row,\n                column: column\n            },\n            id: Math.random().toString(16).substr(2)\n          };\n        \n          this.props.pubnub.publish({ channel: this.props.gameChannel, message });\n    }\n\n    render() {\n        const size = [...Array(7).keys()];\n        const squares = size.map(row => {\n            return size.map(column => {\n                const cup = this.getCup(row, column);\n                return <Square key={\"square\"+row+column} \n                               player={this.props.name}\n                               row={row} \n                               column={column}\n                               hasCup={cup !== null}\n                               active={cup ? cup.active : false}\n                               onUpdateCups={(row, column) => this.handleUpdateCups(row, column)}></Square>;\n            });\n        });\n\n        return (\n            <View style={styles.screenContainer}>\n                <View style={styles.grid}>\n                    {squares}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst YourRack = connect(mapStateToProps)(ConnectedYourRack);\n\nexport default YourRack;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: vw(10),\n        paddingBottom: vw(10),\n        paddingLeft: 15,\n        paddingRight: 15,\n        justifyContent: \"center\",\n        alignItems: 'center'\n    },\n    grid: {\n        width: vw(70),\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport YourRack from '../components/YourRack';\n\nexport const YourTurnScreen = ({ navigation }) => {\n    const pubnub = usePubNub();\n    \n    return (\n        <SafeAreaView>\n            <YourRack pubnub={pubnub}></YourRack>\n        </SafeAreaView>\n    );\n};","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { makeMove } from \"../actions/index\";\nimport Square from '../components/Square';\nimport { GameEvents } from '../constants';\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        makeMove: move => dispatch(makeMove(move))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedOpponentRack extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.setUUID(this.props.UUID);\n            const listener = {\n                message: envelope => {\n                  if (envelope.message.content.event == GameEvents.MakeMove) {\n                    if (envelope.message.content.player !== this.props.player) {\n                        this.props.makeMove({ player: envelope.message.content.player, row: envelope.message.content.row, \n                            column: envelope.message.content.column});\n                    }\n                  }\n                }\n              };\n        \n              this.props.pubnub.addListener(listener);\n            this.props.pubnub.subscribe({ channels: [this.props.gameChannel] });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.pubnub) {\n            this.props.pubnub.unsubscribeAll();\n        }\n    }\n\n    getCup(row, column) {\n        for (const cup of this.props.opponentCups) {\n            if (cup.row === row && cup.column === column) {\n                return cup;\n            }\n        }\n        return null;\n    }\n\n    render() {\n        const size = [...Array(7).keys()];\n        const squares = size.map(invRow => {\n            return size.map(invColumn => {\n                const row = 6 - invRow;\n                const column = 6 - invColumn;\n                const cup = this.getCup(row, column);\n                return <Square key={\"square\"+row+column} \n                               player={this.props.opponentName}\n                               row={row} \n                               column={column}\n                               hasCup={cup !== null}\n                               active={cup ? cup.active : false}\n                               onUpdateCups={(row, column) => this.handleUpdateCups(row, column)}></Square>;\n            });\n        });\n\n        return (\n            <View style={styles.screenContainer}>\n                <View style={styles.grid}>\n                    {squares}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst OpponentRack = connect(mapStateToProps, mapDispatchToProps)(ConnectedOpponentRack);\n\nexport default OpponentRack;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: vw(10),\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingBottom: vw(10),\n        justifyContent: \"center\",\n        alignItems: 'center'\n    },\n    grid: {\n        width: vw(70),\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView, Text } from \"react-native\";\nimport { usePubNub } from \"pubnub-react\";\nimport OpponentRack  from \"../components/OpponentRack\";\n\nexport const OpponentsTurnScreen = ({ navigation }) => {\n    const pubnub = usePubNub();\n    \n    return (\n        <SafeAreaView>\n            <OpponentRack pubnub={pubnub}></OpponentRack>\n        </SafeAreaView>\n    );\n};","export const STANDARD = {\n    value: 0,\n    name: \"Standard\",\n    size: 10,\n    cups: [\n        { row: 0, column: 0, active: true },\n        { row: 0, column: 2, active: true},\n        { row: 0, column: 4, active: true },\n        { row: 0, column: 6, active: true },\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 3, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true },\n        { row: 6, column: 3, active: true }\n    ]\n}","import { STANDARD } from '../formations';\nimport { makeMove } from '../actions';\n\nexport const initialState = {\n  name: '',\n  opponentName: '',\n  gameChannel: '',\n  UUID: '',\n  code: '',\n  cups: STANDARD.cups,\n  opponentCups: STANDARD.cups\n}\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === 'UPDATE_GAME') {\n    return Object.assign({}, state, action.payload);\n  }\n  if (action.type === 'MAKE_MOVE') {\n    const cups = action.payload.player === state.name ? [...state.cups] : [...state.opponentCups];\n    const updatedCups = updateCups(cups, action.payload.row, action.payload.column);\n    if (action.payload.player === state.name) {\n      return Object.assign({}, state, { cups: updatedCups} );\n    } else {\n      return Object.assign({}, state, { opponentCups: updatedCups });\n    }\n  }\n  return state;\n}\n\nfunction updateCups(cups, row, column) {\n  cups = cups.map(cup => {\n    if (cup.row === row && cup.column === column) {\n        cup.active = !cup.active;\n    }\n    return cup;\n  })\n  return cups;\n}\n\nexport default rootReducer;","import React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PubNub from \"pubnub\";\nimport { PubNubProvider } from \"pubnub-react\";\nimport { PUBNUB_PUBLISH_KEY, PUBNUB_SUBSCRIBE_KEY } from './secrets';\nimport { WelcomeScreen } from './views/WelcomeScreen';\nimport { CreatorScreen } from './views/CreatorScreen';\nimport { StartScreen } from './views/StartScreen';\nimport { YourTurnScreen } from './views/YourTurnScreen';\nimport { OpponentsTurnScreen } from './views/OpponentsTurnScreen';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst Stack = createStackNavigator();\nconst pubnub = new PubNub({\n  subscribeKey: PUBNUB_SUBSCRIBE_KEY,\n  publishKey: PUBNUB_PUBLISH_KEY\n});\n\nclass App extends Component {\n  constructor(props) {  \n    super(props);\n  }\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <PubNubProvider client={pubnub}>\n            <Stack.Navigator initialRouteName=\"Welcome\">\n              <Stack.Screen name=\"Welcome\" \n                            component={WelcomeScreen} \n                            options={{ title: 'Welcome To BIP' }} />\n              <Stack.Screen name=\"Creator\" \n                            component={CreatorScreen} \n                            options={{ title: 'Game Code' }} />\n              <Stack.Screen name=\"Start\"\n                            component={StartScreen} \n                            options={{ title: 'Choose Start' }} />\n              <Stack.Screen name=\"Your Turn\"\n                            component={YourTurnScreen} \n                            options={{ title: 'Your Turn' }} />\n              <Stack.Screen name=\"Opponents Turn\"\n                            component={OpponentsTurnScreen} \n                            options={{ title: \"Opponent's Turn\" }} />\n            </Stack.Navigator>\n          </PubNubProvider>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","export const PUBNUB_PUBLISH_KEY = \"pub-c-cbe88329-b9ae-47ef-8470-0a088c87c8ae\";\nexport const PUBNUB_SUBSCRIBE_KEY = \"sub-c-1caa123c-8678-11ea-885f-2621b2dc68c7\" ;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/bip-mobile/expo-service-worker.js', { scope: '/bip-mobile/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/circle_PNG6.4c461aef.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_PNG3.d08d37ed.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_PNG4.522bee4a.png\";"],"sourceRoot":""}