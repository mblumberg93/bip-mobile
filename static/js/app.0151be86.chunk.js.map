{"version":3,"sources":["actions/index.js","services/firebase.js","secrets.js","constants.js","components/GameForm.js","views/WelcomeScreen.js","components/CodeDisplay.js","views/CreatorScreen.js","components/ChooseStart.js","views/StartScreen.js","components/Cup.js","components/Square.js","components/YourRack.js","views/YourTurnScreen.js","components/OpponentRack.js","views/OpponentsTurnScreen.js","formations.js","components/SelectRack.js","views/RerackScreen.js","reducers/index.js","App.js","web-build/register-service-worker.js","assets/circle_PNG63.png","assets/circle_PNG28.png","assets/circle_PNG47.png"],"names":["updateGame","payload","type","makeMove","rerack","reset","quit","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","GameEvents","ConnectedGameForm","props","state","name","code","nameError","codeError","e","this","setState","generateCode","gameDB","msg","event","player","timestamp","Date","now","ref","push","onCreate","onJoin","result","characters","charactersLength","length","i","charAt","Math","floor","random","View","style","styles","formContainer","Text","header","label","onChangeText","handleNameChange","containerStyle","marginBottom","errorMessage","renderErrorMessage","fontSize","fontWeight","marginTop","title","buttonStyle","onPress","handleCreate","handleCodeChange","handleJoin","Component","GameForm","connect","dispatch","updates","StyleSheet","create","paddingTop","paddingLeft","paddingRight","WelcomeScreen","navigation","SafeAreaView","navigate","isJoiner","ConnectedCodeDisplay","limitToLast","on","message","val","newMsg","opponentName","goToStart","codeText","TouchableOpacity","Clipboard","setString","color","CodeDisplay","textAlign","CreatorScreen","ConnectedChooseStart","displayStartOptions","starter","onYouStart","onOpponentStart","screenContainer","standardText","handleYouStart","handleOpponentStart","ChooseStart","StartScreen","route","params","ConnectedCup","row","column","onUpdateCups","source","active","require","cupContainer","toggleCup","disabled","Image","cup","Cup","move","width","height","marginLeft","overflow","vw","Square","square","hasCup","key","ConnectedYourRack","cups","onRerack","onEndTurn","Alert","alert","text","resetGame","quitGame","console","log","onQuit","size","Array","keys","squares","map","getCup","handleUpdateCups","Fragment","rackContainer","grid","buttonContainer","handleRerack","handleEndTurn","backgroundColor","borderColor","promptReset","promptQuit","YourRack","_","paddingBottom","justifyContent","alignItems","display","flexDirection","flexWrap","YourTurnScreen","ConnectedOpponentRack","opponentCups","onStartTurn","formation","invRow","invColumn","OpponentRack","rack","OpponentsTurnScreen","STANDARD","value","FORMATIONS","ConnectedSelectRack","onChooseRack","onCancel","cupsAvailable","filter","options","pickerContainer","items","onValueChange","placeholder","pickerSelectStyles","handleChooseRack","handleCancel","SelectRack","inputIOS","paddingVertical","paddingHorizontal","borderWidth","borderRadius","inputAndroid","RerackScreen","initialState","updateCups","copy","arr","newArr","item","rootReducer","action","updatedCups","resetValues","store","createStore","composeWithDevTools","applyMiddleware","thunk","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","component","headerLeft","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.0151be86.chunk.js","sourcesContent":["export function updateGame(payload) {\n  return { type: 'UPDATE_GAME', payload };\n}\n\nexport function makeMove(payload) {\n  return { type: 'MAKE_MOVE', payload };\n}\n\nexport function rerack(payload) {\n  return { type: 'RERACK', payload };\n}\n\nexport function reset(payload) {\n  return { type: 'RESET', payload };\n}\n\nexport function quit(payload) {\n  return { type: 'QUIT', payload };\n}","import * as firebase from 'firebase';\nimport { FIREBASE_CONFIG } from '../secrets';\n\nfirebase.initializeApp(FIREBASE_CONFIG);\n\nexport const firebaseDB = firebase.database();","export const PUBNUB_PUBLISH_KEY = \"pub-c-cbe88329-b9ae-47ef-8470-0a088c87c8ae\";\nexport const PUBNUB_SUBSCRIBE_KEY = \"sub-c-1caa123c-8678-11ea-885f-2621b2dc68c7\" ;\nexport const FIREBASE_CONFIG = {\n    apiKey: \"AIzaSyA29OFrh-oflVKXzNt1vKL7nVFK7Z2dJKQ\",\n    authDomain: \"bip-mobile-fb871.firebaseapp.com\",\n    databaseURL: \"https://bip-mobile-fb871.firebaseio.com\",\n    projectId: \"bip-mobile-fb871\",\n    storageBucket: \"bip-mobile-fb871.appspot.com\",\n    messagingSenderId: \"968419467653\",\n    appId: \"1:968419467653:web:fbf8c749e43e677f1b64ec\",\n    measurementId: \"G-37SGKRG6Z5\"\n  };","export const GameEvents = {\n    JoinerEnteringGame: 0,\n    CreatorEnteringGame: 1,\n    GameStart: 2,\n    MakeMove: 3,\n    EndTurn: 4,\n    Rerack: 5,\n    UpdateGameState: 6,\n    CreateGame: 7,\n    Reset: 8,\n    Quit: 9\n}","import React, { Component } from 'react';\nimport { Input, Button, Divider } from 'react-native-elements'\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\nimport { firebaseDB } from '../services/firebase';\nimport { GameEvents } from '../constants';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nclass ConnectedGameForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            name: '',\n            code: '',\n            nameError: false,\n            codeError: false\n        }\n    }\n\n    handleNameChange(e) {\n        this.setState({ name: e, nameError: false });\n    }\n\n    handleCodeChange(e) {\n        this.setState({ code: e, codeError: false });\n    }\n\n    handleCreate() {\n        if (this.state.name) {\n            const code = this.generateCode();\n            const gameDB = \"games/game-\" + code;\n            this.props.updateGame({ name: this.state.name, code: code, gameDB: gameDB });\n            const msg = {\n                event: GameEvents.CreateGame,\n                player: this.state.name,\n                timestamp: Date.now()\n            };\n            firebaseDB.ref(gameDB).push(msg);\n            this.props.onCreate();\n        } else {\n            this.setState({ nameError: true });\n        }\n    }\n\n    handleJoin() {\n        if (this.state.name && this.state.code) {\n            const gameDB = \"games/game-\" + this.state.code;\n            this.props.updateGame({ name: this.state.name, code: this.state.code, gameDB: gameDB });\n            this.props.onJoin();\n        } else if (this.state.name && !this.state.code) {\n            this.setState({ codeError: true });\n        } else if (!this.state.name && this.state.code) {\n            this.setState({ nameError: true });\n        } else {\n            this.setState({ nameError: true, codeError: true })\n        }\n    }\n\n    generateCode() {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < 6; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    render() {\n        return (\n            <View style={styles.formContainer}>\n                <Text style={styles.header}>Step 1: Enter Team Name</Text>\n                <Input label=\"Team Name\" \n                       onChangeText={(e) => this.handleNameChange(e)}\n                       containerStyle={{ marginBottom: 20 }}\n                       errorMessage={this.state.nameError ? \"Team Name is required\" : null }\n                       renderErrorMessage={this.state.nameError}>\n                </Input>\n                <Text style={{ fontSize: 20, fontWeight: \"bold\", marginBottom: 30, marginTop: 10}}>\n                    Step 2: Create A Game or Join A Game\n                </Text>\n                <Button title=\"Create\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleCreate()}>\n                </Button>\n                <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n                <Input label=\"Game Code\" \n                       onChangeText={(e) => this.handleCodeChange(e)}\n                       containerStyle={{ marginBottom: 20 }}\n                       errorMessage={this.state.codeError ? \"Game Code is required to join game\" : null }\n                       renderErrorMessage={this.state.codeError}>\n                </Input>\n                <Button title=\"Join\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleJoin()}>\n                </Button>\n            </View>\n        )\n    }\n};\n\nconst GameForm = connect(null,mapDispatchToProps)(ConnectedGameForm);\n\nexport default GameForm;\n\nconst styles = StyleSheet.create({\n    header: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        marginBottom: 30,\n        marginTop: 10\n    },\n    formContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport GameForm from '../components/GameForm';\n\nexport const WelcomeScreen = ({ navigation }) => {\n    const handleCreate = () => {\n        navigation.navigate(\"Creator\", {});\n    }\n\n    const handleJoin = () => {\n        navigation.navigate(\"Start\", { isJoiner: true });\n    }\n\n    return (\n        <SafeAreaView>    \n            <GameForm onCreate={handleCreate}\n                      onJoin={handleJoin}>\n            </GameForm>\n        </SafeAreaView>\n    );\n};","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Clipboard } from \"react-native\";\nimport { GameEvents } from '../constants';\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\nimport { firebaseDB } from '../services/firebase';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedCodeDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        firebaseDB.ref(this.props.gameDB).limitToLast(1).on(\"child_added\", msg => {\n            const message = msg.val();\n            if (message.player === this.props.name) {\n                return;\n            }\n            if (message.event == GameEvents.JoinerEnteringGame) {\n                const newMsg = {\n                    event: GameEvents.CreatorEnteringGame,\n                    player: this.props.name,\n                    timestamp: Date.now()\n                }\n                firebaseDB.ref(this.props.gameDB).push(newMsg);\n                this.props.updateGame({opponentName: message.player});\n                this.props.goToStart();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <View>\n                <Text style={styles.codeText}>Welcome {this.props.name}</Text>\n                <Text style={styles.codeText}>Share This Code With Your Opponent</Text>\n                <Text style={styles.codeText}>{this.props.code}</Text>\n                <TouchableOpacity onPress={() => Clipboard.setString(this.props.code)}>\n                    <Text style={[styles.codeText, { color: \"blue\" }]}> \n                        Copy Code To Clipboard\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}\n\nconst CodeDisplay = connect(mapStateToProps, mapDispatchToProps)(ConnectedCodeDisplay);\n\nexport default CodeDisplay;\n\nconst styles = StyleSheet.create({\n    codeText: {\n        textAlign: \"center\",\n        marginTop: 15,\n        marginBottom: 15,\n        fontSize: 20,\n        fontWeight: \"bold\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport CodeDisplay from \"../components/CodeDisplay\";\n\nexport const CreatorScreen = ({ navigation }) => {\n  const goToStart = () => {\n    navigation.navigate(\"Start\", {});\n  }\n\n  return (\n      <SafeAreaView> \n        <CodeDisplay goToStart={goToStart}></CodeDisplay>\n      </SafeAreaView>\n  );\n};","import React, { Component } from 'react';\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { Button } from 'react-native-elements';\nimport { connect } from \"react-redux\";\nimport { updateGame } from \"../actions/index\";\nimport { GameEvents } from '../constants';\nimport { firebaseDB } from '../services/firebase';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateGame: updates => dispatch(updateGame(updates))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedChooseStart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayStartOptions: (this.props.isJoiner ? false : true)\n        }\n    }\n\n    componentDidMount() {\n        firebaseDB.ref(this.props.gameDB).limitToLast(1).on(\"child_added\", msg => {\n            const message = msg.val();\n            if (message.player === this.props.name) {\n                return;\n            }\n\n            switch(message.event) {\n                case GameEvents.CreatorEnteringGame:\n                    if (this.props.isJoiner) {\n                        this.props.updateGame({opponentName: message.player });\n                        this.setState({ displayStartOptions: true });\n                    }  \n                    break;\n                case GameEvents.GameStart:\n                    if (message.starter == this.props.name) {\n                        this.props.onYouStart();\n                    } else {\n                        this.props.onOpponentStart();\n                    }\n                  break;\n                }\n        });\n\n        if (this.props.isJoiner) {\n            const msg = {\n                event: GameEvents.JoinerEnteringGame,\n                player: this.props.name,\n                timestamp: Date.now()\n            }\n            firebaseDB.ref(this.props.gameDB).push(msg);\n        }\n    }\n\n    handleYouStart() {\n        this.props.onYouStart();\n        const msg = {\n            event: GameEvents.GameStart,\n            player: this.props.name,\n            starter: this.props.name,\n            timestamp: Date.now()\n        }\n        firebaseDB.ref(this.props.gameDB).push(msg);\n    }\n\n    handleOpponentStart() {\n        this.props.onOpponentStart();\n        const msg = {\n            event: GameEvents.GameStart,\n            player: this.props.name,\n            starter: this.props.opponentName,\n            timestamp: Date.now()\n        }\n        firebaseDB.ref(this.props.gameDB).push(msg);\n    }\n\n    render() {\n        return (\n            <View style={styles.screenContainer}>\n                <Text style={styles.standardText}>Welcome {this.props.name}!</Text>\n                { !this.state.displayStartOptions &&\n                    <Text style={styles.standardText}>Waiting For Your Opponent To Join The Game...</Text>\n                } \n                { this.state.displayStartOptions && \n                    <View>\n                        <Text style={styles.standardText}>Your opponent is {this.props.opponentName}</Text>\n                        <Text style={styles.standardText}>Choose who starts</Text>\n                        <Button title={this.props.name + \" Starts\"} \n                                buttonStyle={{ marginBottom: 15 }}\n                                onPress={() => this.handleYouStart()}>\n                        </Button>\n                        <Button title={this.props.opponentName + \" Starts\"} \n                                buttonStyle={{ marginBottom: 15 }}\n                                onPress={() => this.handleOpponentStart()}>\n                        </Button>\n                    </View>\n                }\n            </View>\n        );\n    }\n}\n\nconst ChooseStart = connect(mapStateToProps, mapDispatchToProps)(ConnectedChooseStart);\n\nexport default ChooseStart;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    standardText: {\n        textAlign: \"center\",\n        marginTop: 15,\n        marginBottom: 15,\n        fontSize: 20,\n        fontWeight: \"bold\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport ChooseStart from \"../components/ChooseStart\";\n\nexport const StartScreen = ({ route, navigation }) => {\n    const handleYouStart = () => {\n        navigation.navigate(\"Your Turn\", { });\n    }\n\n    const handleOpponentStart = () => {\n        navigation.navigate(\"Opponents Turn\", { });\n    }\n    \n    return (\n        <SafeAreaView>\n            <ChooseStart isJoiner={route.params.isJoiner}\n                         onYouStart={handleYouStart}\n                         onOpponentStart={handleOpponentStart}></ChooseStart>\n        </SafeAreaView>\n    );\n};","import React, { Component } from 'react';\nimport { StyleSheet, Image, TouchableOpacity } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { makeMove } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        makeMove: move => dispatch(makeMove(move))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedCup extends Component {\n    constructor(props) {\n        super(props)\n    }\n    \n    toggleCup() {\n        if (this.props.player === this.props.name) {\n            this.props.makeMove({ player: this.props.name, row: this.props.row, column: this.props.column });\n            this.props.onUpdateCups(this.props.row, this.props.column);\n        }\n    }\n\n    render() {\n        const source = !this.props.active ? require('../assets/circle_PNG63.png') : this.props.player === this.props.name ? \n            require('../assets/circle_PNG28.png') : require('../assets/circle_PNG47.png')\n        return (\n            <TouchableOpacity style={styles.cupContainer}\n                              onPress={() => this.toggleCup()}\n                              disabled={this.props.player !== this.props.name}>\n                <Image style={styles.cup} source={source}>\n                </Image>\n            </TouchableOpacity>\n        );\n    }\n}\n\nconst Cup = connect(mapStateToProps, mapDispatchToProps)(ConnectedCup);\n\nexport default Cup;\n\nconst styles = StyleSheet.create({\n    cup: {\n        width: \"180%\",\n        height: \"180%\",\n        marginTop: \"-45%\",\n        marginLeft: \"-45%\"\n    },\n    cupContainer: {\n        overflow: \"visible\",\n        width: \"100%\",\n        height: \"100%\"\n    }\n});","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport Cup from '../components/Cup';\nconst { vw } = require('react-native-expo-viewport-units');\n\nclass Square extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <View style={styles.square}>\n                { this.props.hasCup &&\n                    <Cup key={\"cup\" + this.props.row + this.props.column}\n                         player={this.props.player}\n                         row={this.props.row}\n                         column={this.props.column}\n                         active={this.props.active}\n                         onUpdateCups={(row, column) => this.props.onUpdateCups(row, column)}>\n                    </Cup>\n                }\n            </View>\n        );\n    }\n}\n\nexport default Square;\n\nconst styles = StyleSheet.create({\n    square: {\n        width: vw(10),\n        height: vw(10)\n    }\n});","import React, { Component } from 'react';\nimport { View, StyleSheet, Alert  } from \"react-native\";\nimport { Button, Divider} from 'react-native-elements'\nimport { connect } from \"react-redux\";\nimport Square from '../components/Square';\nimport { GameEvents } from '../constants';\nimport { firebaseDB } from '../services/firebase';\nimport { reset, quit} from \"../actions/index\";\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        reset: _ => dispatch(reset(_)),\n        quit: _ => dispatch(quit(_))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedYourRack extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    getCup(row, column) {\n        for (const cup of this.props.cups) {\n            if (cup.row === row && cup.column === column) {\n                return cup;\n            }\n        }\n        return null;\n    }\n\n    handleUpdateCups(row, column) {\n        const msg = {\n            event: GameEvents.MakeMove,\n            player: this.props.name,\n            row: row,\n            column: column,\n            timestamp: Date.now()\n        }\n        firebaseDB.ref(this.props.gameDB).push(msg);\n    }\n\n    handleRerack() {\n        this.props.onRerack();\n    }\n\n    handleEndTurn() {\n        const msg = {\n            event: GameEvents.EndTurn,\n            player: this.props.name,\n            cups: this.props.cups,\n            timestamp: Date.now()\n        }\n        firebaseDB.ref(this.props.gameDB).push(msg);\n        this.props.onEndTurn();\n    }\n\n    promptReset() {\n        Alert.alert(\n            \"Reset Game\",\n            \"Are you sure you want to reset the game?\",\n            [\n                { text: \"Cancel\", style: \"cancel\" },\n                { text: \"OK\", onPress: () => this.resetGame() }\n            ]\n        );\n    }\n\n    resetGame() {\n        const msg = {\n            event: GameEvents.Reset,\n            player: this.props.name,\n            timestamp: Date.now()\n        }\n        firebaseDB.ref(this.props.gameDB).push(msg);\n        this.props.reset();\n    }\n\n    promptQuit() {\n        Alert.alert(\n            \"Quit Game\",\n            \"Are you sure you want to quit the game?\",\n            [\n                { text: \"Cancel\", style: \"cancel\" },\n                { text: \"OK\", onPress: () => this.quitGame() }\n            ]\n        );\n    }\n\n    quitGame() {\n        const name = this.props.name;\n        const gameDB = this.props.gameDB;\n        const msg = {\n            event: GameEvents.Quit,\n            player: name,\n            timestamp: Date.now()\n        }\n        console.log(msg);\n        firebaseDB.ref(gameDB).push(msg);\n        this.props.quit();\n        this.props.onQuit();\n    }\n\n    render() {\n        const size = [...Array(7).keys()];\n        const squares = size.map(row => {\n            return size.map(column => {\n                const cup = this.getCup(row, column);\n                return <Square key={\"square\"+row+column} \n                               player={this.props.name}\n                               row={row} \n                               column={column}\n                               hasCup={cup !== null}\n                               active={cup ? cup.active : false}\n                               onUpdateCups={(row, column) => this.handleUpdateCups(row, column)}></Square>;\n            });\n        });\n\n        return (\n            <React.Fragment>\n                <View style={styles.rackContainer}>\n                    <View style={styles.grid}>\n                        {squares}\n                    </View>\n                </View>\n                <View style={styles.buttonContainer}>\n                    <Button title=\"Rerack\" \n                            buttonStyle={{ marginBottom: 15 }}\n                            onPress={() => this.handleRerack()}>\n                    </Button>\n                    <Button title=\"End Turn\" \n                            buttonStyle={{ marginBottom: 15 }}\n                            onPress={() => this.handleEndTurn()}>\n                    </Button>\n                </View>\n                <View style={styles.buttonContainer}>\n                    <Button title=\"Reset Game\" \n                            buttonStyle={{ marginBottom: 15, backgroundColor: \"lightgrey\", borderColor: \"grey\" }}\n                            onPress={() => this.promptReset()}>\n                    </Button>\n                    <Button title=\"Quit Game\" \n                            buttonStyle={{ marginBottom: 15, backgroundColor: \"lightgrey\", borderColor: \"grey\" }}\n                            onPress={() => this.promptQuit()}>\n                    </Button>\n                </View>\n            </React.Fragment>\n        );\n    }\n}\n\nconst YourRack = connect(mapStateToProps, mapDispatchToProps)(ConnectedYourRack);\n\nexport default YourRack;\n\nconst styles = StyleSheet.create({\n    rackContainer: {\n        paddingTop: vw(10),\n        paddingBottom: vw(10),\n        paddingLeft: 15,\n        paddingRight: 15,\n        justifyContent: \"center\",\n        alignItems: 'center'\n    },\n    buttonContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingBottom: 20\n    },\n    grid: {\n        width: vw(70),\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport YourRack from '../components/YourRack';\n\nexport const YourTurnScreen = ({ navigation }) => {\n    const handleRerack = () => {\n        navigation.navigate(\"Rerack\", {});\n    }\n\n    const handleEndTurn = () => {\n        navigation.navigate(\"Opponents Turn\", {});\n    }\n\n    const handleQuit = () => {\n        navigation.navigate(\"Welcome\", {});\n    }\n    \n    return (\n        <SafeAreaView>\n            <YourRack onRerack={handleRerack}\n                      onEndTurn={handleEndTurn}\n                      onQuit={handleQuit}>\n            </YourRack>\n        </SafeAreaView>\n    );\n};","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { makeMove, rerack, updateGame, reset, quit } from \"../actions/index\";\nimport Square from '../components/Square';\nimport { GameEvents } from '../constants';\nimport { firebaseDB } from '../services/firebase';\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        makeMove: move => dispatch(makeMove(move)),\n        rerack: rack => dispatch(rerack(rack)),\n        updateGame: updates => dispatch(updateGame(updates)),\n        reset: _ => dispatch(reset(_)),\n        quit: _ => dispatch(quit(_))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedOpponentRack extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        firebaseDB.ref(this.props.gameDB).limitToLast(1).on(\"child_added\", msg => {\n            const message = msg.val();\n            if (message.player === this.props.name) {\n                return;\n            }\n\n            switch(message.event) {\n                case GameEvents.MakeMove:\n                    const move = { \n                        player: message.player, \n                        row: message.row, \n                        column: message.column\n                    }\n                    this.props.makeMove(move);\n                    break;\n                case GameEvents.EndTurn:\n                    this.props.updateGame({ opponentCups: message.cups });\n                    this.props.onStartTurn();\n                  break;\n                case GameEvents.Rerack:\n                    this.props.rerack({ player: message.player, formation: message.formation });\n                  break;\n                case GameEvents.Reset:\n                    this.props.reset({});\n                  break;\n                case GameEvents.Quit:\n                    this.props.quit({});\n                    this.props.onQuit();\n                  break;\n                }\n        });\n    }\n\n    getCup(row, column) {\n        for (const cup of this.props.opponentCups) {\n            if (cup.row === row && cup.column === column) {\n                return cup;\n            }\n        }\n        return null;\n    }\n\n    render() {\n        const size = [...Array(7).keys()];\n        const squares = size.map(invRow => {\n            return size.map(invColumn => {\n                const row = 6 - invRow;\n                const column = 6 - invColumn;\n                const cup = this.getCup(row, column);\n                return <Square key={\"square\"+row+column} \n                               player={this.props.opponentName}\n                               row={row} \n                               column={column}\n                               hasCup={cup !== null}\n                               active={cup ? cup.active : false}\n                               onUpdateCups={(row, column) => this.handleUpdateCups(row, column)}></Square>;\n            });\n        });\n\n        return (\n            <View style={styles.screenContainer}>\n                <View style={styles.grid}>\n                    {squares}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst OpponentRack = connect(mapStateToProps, mapDispatchToProps)(ConnectedOpponentRack);\n\nexport default OpponentRack;\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        paddingTop: vw(10),\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingBottom: vw(10),\n        justifyContent: \"center\",\n        alignItems: 'center'\n    },\n    grid: {\n        width: vw(70),\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n    }\n});","import React from \"react\";\nimport { SafeAreaView, Text } from \"react-native\";\nimport OpponentRack  from \"../components/OpponentRack\";\n\nexport const OpponentsTurnScreen = ({ navigation }) => {\n    const handleStartTurn = () => {\n        navigation.navigate(\"Your Turn\", {});\n    }\n\n    const handleQuit = () => {\n        navigation.navigate(\"Welcome\", {});\n    }\n    \n    return (\n        <SafeAreaView>\n            <OpponentRack onStartTurn={handleStartTurn}\n                          onQuit={handleQuit}>\n            </OpponentRack>\n        </SafeAreaView>\n    );\n};","export const STANDARD = {\n    value: 0,\n    name: \"Standard\",\n    size: 10,\n    cups: [\n        { row: 0, column: 0, active: true },\n        { row: 0, column: 2, active: true},\n        { row: 0, column: 4, active: true },\n        { row: 0, column: 6, active: true },\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 3, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true },\n        { row: 6, column: 3, active: true }\n    ]\n}\n\nexport const DESPERATION = {\n    value: 1,\n    name: \"Desperation Honeycomb\",\n    size: 7,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 0, column: 4, active: true},\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 3, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true }\n    ]\n}\n\nexport const THREETWOONE = {\n    value: 2,\n    name: \"Three Two One\",\n    size: 6,\n    cups: [\n        { row: 0, column: 1, active: true },\n        { row: 0, column: 3, active: true},\n        { row: 0, column: 5, active: true },\n        { row: 2, column: 2, active: true },\n        { row: 2, column: 4, active: true },\n        { row: 4, column: 3, active: true }\n    ]\n}\n\nexport const THREETHREESTRAIGHT = {\n    value: 3,\n    name: \"Three Three Straight Line\",\n    size: 6,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true },\n        { row: 3, column: 4, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 5, column: 4, active: true }\n    ]\n}\n\nexport const LARGEPLAYBUTTON = {\n    value: 4,\n    name: \"Large Play Button\",\n    size: 6,\n    cups: [\n        { row: 0, column: 1, active: true },\n        { row: 1, column: 3, active: true},\n        { row: 2, column: 1, active: true },\n        { row: 2, column: 5, active: true },\n        { row: 3, column: 3, active: true },\n        { row: 4, column: 1, active: true }\n    ]\n}\n\nexport const THREETWOSTRAIGHT = {\n    value: 5,\n    name: \"Three Two Straight Line\",\n    size: 5,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true },\n        { row: 3, column: 4, active: true },\n        { row: 4, column: 2, active: true }\n    ]\n}\n\nexport const DOGBONE = {\n    value: 6,\n    name: \"Dog Bone\",\n    size: 5,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 0, column: 4, active: true},\n        { row: 2, column: 3, active: true },\n        { row: 4, column: 2, active: true },\n        { row: 4, column: 4, active: true }\n    ]\n}\n\nexport const DIAMOND = {\n    value: 7,\n    name: \"Diamond\",\n    size: 4,\n    cups: [\n        { row: 0, column: 3, active: true },\n        { row: 2, column: 2, active: true},\n        { row: 2, column: 4, active: true },\n        { row: 4, column: 3, active: true }\n    ]\n}\n\nexport const TWOTWOSTRAIGHT = {\n    value: 8,\n    name: \"Two Two Straight Line\",\n    size: 4,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true },\n        { row: 3, column: 4, active: true }\n    ]\n}\n\nexport const TINYTRIANGLE = {\n    value: 9,\n    name: \"Tiny Triange\",\n    size: 3,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 0, column: 4, active: true},\n        { row: 2, column: 3, active: true }\n    ]\n}\n\nexport const BELLYBUTTON = {\n    value: 10,\n    name: \"Belly Button (Small Play Button)\",\n    size: 3,\n    cups: [\n        { row: 0, column: 2, active: true },\n        { row: 1, column: 4, active: true},\n        { row: 2, column: 2, active: true }\n    ]\n}\n\nexport const STOPLIGHT = {\n    value: 11,\n    name: \"Stoplight\",\n    size: 3,\n    cups: [\n        { row: 0, column: 3, active: true },\n        { row: 2, column: 3, active: true},\n        { row: 4, column: 3, active: true }\n    ]\n}\n\nexport const GENTLEMENS = {\n    value: 12,\n    name: \"Gentlemens\",\n    size: 2,\n    cups: [\n        { row: 0, column: 3, active: true },\n        { row: 2, column: 3, active: true}\n    ]\n}\n\nexport const SINGLECUP = {\n    value: 13,\n    name: \"Single Cup\",\n    size: 1,\n    cups: [\n        { row: 0, column: 3, active: true }\n    ]\n}\n\nexport const FORMATIONS = [\n    STANDARD,\n    DESPERATION,\n    THREETWOONE,\n    THREETHREESTRAIGHT,\n    LARGEPLAYBUTTON,\n    THREETWOSTRAIGHT,\n    DOGBONE,\n    DIAMOND,\n    TWOTWOSTRAIGHT,\n    TINYTRIANGLE,\n    BELLYBUTTON,\n    STOPLIGHT,\n    GENTLEMENS,\n    SINGLECUP\n];","import React, { Component } from 'react';\nimport { View, StyleSheet } from \"react-native\";\nimport { Button } from 'react-native-elements'\nimport { connect } from \"react-redux\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport { GameEvents } from '../constants';\nimport { FORMATIONS }from '../formations';\nimport { rerack } from \"../actions/index\";\nimport { firebaseDB } from '../services/firebase';\nconst { vw } = require('react-native-expo-viewport-units');\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        rerack: rack => dispatch(rerack(rack))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return state ;\n};\n\nclass ConnectedSelectRack extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formation: null\n        }\n    }\n\n    handleChooseRack() {\n        const msg = {\n            event: GameEvents.Rerack,\n            player: this.props.name,\n            formation: this.state.formation,\n            timestamp: Date.now()\n        }\n        firebaseDB.ref(this.props.gameDB).push(msg);\n        this.props.rerack({ player: this.props.name, formation: this.state.formation });\n        this.props.onChooseRack();\n    }\n\n    handleCancel() {\n        this.props.onCancel();\n    }\n\n    render() {\n        const cupsAvailable = this.props.cups.filter(cup => cup.active).length;\n        const possibleFormations = FORMATIONS.filter(formation => formation.size == cupsAvailable);\n\n        const options = possibleFormations.map(formation => {\n            return { label: formation.name, value: formation.value };\n        });\n\n        const placeholder = {\n            label: \"Select a Rack...\",\n            value: '',\n            color: 'grey'\n          };\n\n        return (\n            <View style={styles.buttonContainer}>\n                <View style={styles.pickerContainer}>\n                    <RNPickerSelect items={options}\n                                    onValueChange={(value) => this.setState({ formation: value })} \n                                    placeholder={placeholder}\n                                    style={pickerSelectStyles} />\n                </View>\n                <Button title=\"Rerack\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleChooseRack()}>\n                </Button>\n                <Button title=\"Cancel\" \n                        buttonStyle={{ marginBottom: 15 }}\n                        onPress={() => this.handleCancel()}>\n                </Button>\n            </View>\n        );\n    }\n}\n\nconst SelectRack = connect(mapStateToProps, mapDispatchToProps)(ConnectedSelectRack);\n\nexport default SelectRack;\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n        paddingTop: 20,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    pickerContainer: {\n        marginBottom: 20\n    }\n});\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n      paddingVertical: 12,\n      paddingHorizontal: 10,\n      borderWidth: 1,\n      borderColor: 'gray',\n      borderRadius: 4,\n      color: 'black',\n      paddingRight: 30\n    },\n    inputAndroid: {\n      paddingHorizontal: 10,\n      paddingVertical: 8,\n      borderWidth: 0.5,\n      borderColor: 'purple',\n      borderRadius: 8,\n      color: 'black',\n      paddingRight: 30\n    },\n  });","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport SelectRack from '../components/SelectRack';\n\nexport const RerackScreen = ({ navigation }) => {\n    const handleChooseRack = () => {\n        navigation.navigate(\"Your Turn\", {});\n    }\n\n    const handleCancel = () => {\n        navigation.navigate(\"Your Turn\", {});\n    }\n    \n    return (\n        <SafeAreaView>\n            <SelectRack onChooseRack={handleChooseRack}\n                        onCancel={handleCancel}>\n            </SelectRack>\n        </SafeAreaView>\n    );\n};","import { STANDARD, FORMATIONS } from '../formations';\n\nexport const initialState = {\n  name: '',\n  opponentName: '',\n  code: '',\n  cups: STANDARD.cups,\n  opponentCups: STANDARD.cups,\n  formation: STANDARD.value,\n  gameDB: ''\n}\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === 'UPDATE_GAME') {\n    return Object.assign({}, state, action.payload);\n  }\n  if (action.type === 'MAKE_MOVE') {\n    const cups = action.payload.player === state.name ? copy(state.cups) : copy(state.opponentCups);\n    const updatedCups = updateCups(cups, action.payload.row, action.payload.column);\n    if (action.payload.player === state.name) {\n      return Object.assign({}, state, { cups: updatedCups} );\n    } else {\n      return Object.assign({}, state, { opponentCups: updatedCups });\n    }\n  }\n  if (action.type === 'RERACK') {\n    const cups = FORMATIONS.filter(formation => formation.value == action.payload.formation)[0].cups;\n    if (action.payload.player === state.name) {\n      return Object.assign({}, state, { cups: cups} );\n    } else {\n      return Object.assign({}, state, { opponentCups: cups });\n    }\n  }\n  if (action.type === 'RESET') {\n    const resetValues = { cups: STANDARD.cups, opponentCups: STANDARD.cups, formation: STANDARD.value }\n    return Object.assign({}, state, resetValues);\n  }\n  if (action.type === 'QUIT') {\n    return Object.assign({}, state, initialState);\n  }\n  return state;\n}\n\nfunction updateCups(cups, row, column) {\n  const newCups = cups.map(cup => {\n    if (cup.row === row && cup.column === column) {\n        cup.active = !cup.active;\n    }\n    return cup;\n  })\n  return newCups;\n}\n\nfunction copy(arr) {\n  const newArr = [];\n  for (const item of arr) {\n    newArr.push(Object.assign({}, item));\n  }\n  return newArr;\n}\n\nexport default rootReducer;","import React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { WelcomeScreen } from './views/WelcomeScreen';\nimport { CreatorScreen } from './views/CreatorScreen';\nimport { StartScreen } from './views/StartScreen';\nimport { YourTurnScreen } from './views/YourTurnScreen';\nimport { OpponentsTurnScreen } from './views/OpponentsTurnScreen';\nimport { RerackScreen } from './views/RerackScreen';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst Stack = createStackNavigator();\n\nclass App extends Component {\n  constructor(props) {  \n    super(props);\n  }\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Welcome\">\n            <Stack.Screen name=\"Welcome\" \n                          component={WelcomeScreen} \n                          options={{ title: 'Welcome To BIP' }} />\n            <Stack.Screen name=\"Creator\" \n                          component={CreatorScreen} \n                          options={{ title: 'Game Code' }} />\n            <Stack.Screen name=\"Start\"\n                          component={StartScreen} \n                          options={{ title: 'Choose Start' }} />\n            <Stack.Screen name=\"Your Turn\"\n                          component={YourTurnScreen} \n                          options={{ title: 'Your Turn', headerLeft: null }} />\n            <Stack.Screen name=\"Opponents Turn\"\n                          component={OpponentsTurnScreen} \n                          options={{ title: \"Opponent's Turn\", headerLeft: null }} />\n            <Stack.Screen name=\"Rerack\"\n                          component={RerackScreen} \n                          options={{ title: \"Choose Rack\", headerLeft: null }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/bip-mobile/expo-service-worker.js', { scope: '/bip-mobile/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/circle_PNG63.6b47719b.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_PNG28.dc0b480f.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_PNG47.7225507e.png\";"],"sourceRoot":""}